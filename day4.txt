import { Component } from '@angular/core';
import { FormBuilder, FormGroup, Validators } from '@angular/forms';

@Component({
  selector: 'app-register',
  templateUrl: './register.component.html',
  styleUrl: './register.component.css'
})
export class RegisterComponent {
  registerForm: FormGroup
  hidePassword = true
  constructor(private fb: FormBuilder) {
    this.registerForm = this.fb.group({
      uname: ['', [Validators.required, Validators.minLength(3)]],
      email: ['', [Validators.required, Validators.email]],
      password: ['', [Validators.required, Validators.minLength(6)]],
      cpassword: ['', Validators.required],

    },
      { Validators: this.passwordMatchValidator })
  }
  passwordMatchValidator(form: FormGroup) {
    return form.get('password')!.value === form.get('cpassword')!.value ? null : { mismatch: true }
  }
  addUser() {
    if (this.registerForm.valid) {
      console.log('Registration Success ', this.registerForm.value);

    }
  }

}
---
<form [formGroup]="registerForm" (ngSubmit)="addUser()" class="mat-card-p4" style="max-width: 400px; margin: auto;">
    <h2>Registration Form</h2>
    <mat-form-field appearance="outline" class="w-100">
        <mat-label>UserName</mat-label>
        <input matInput formControlName="uname" />
        <mat-error *ngIf="registerForm.get('uname')?.hasError('required')">Name is required</mat-error>
        <mat-error *ngIf="registerForm.get('uname')?.hasError('minlength')">Name must be 3 char long</mat-error>
    </mat-form-field>


    <mat-form-field appearance="outline" class="w-100">
        <mat-label>Email</mat-label>
        <input matInput formControlName="email" />
        <mat-error *ngIf="registerForm.get('email')?.hasError('required')">Email is required</mat-error>
        <mat-error *ngIf="registerForm.get('email')?.hasError('email')">Email must be Formatted</mat-error>
    </mat-form-field>


    <mat-form-field appearance="outline" class="w-100">
        <mat-label>Password</mat-label>
        <input matInput [type]="hidePassword ? 'password' : 'text'" formControlName="password" />
        <button mat-icon-button matSuffix (click)="hidePassword =!hidePassword">
            <mat-icon>{{hidePassword ? 'visibility_off' :'visibility'}}</mat-icon>
        </button>
        <mat-error *ngIf="registerForm.get('password')?.hasError('required')">password is required</mat-error>
        <mat-error *ngIf="registerForm.get('password')?.hasError('minlength')">password must be 6 char long</mat-error>
    </mat-form-field>


    <mat-form-field appearance="outline" class="w-100">
        <mat-label>Confirm Password</mat-label>
        <input matInput [type]="hidePassword ? 'password' : 'text'" formControlName="cpassword" />
      
        <mat-error *ngIf="registerForm.get('cpassword')?.hasError('required')">password is required</mat-error>
        <mat-error *ngIf="registerForm.errors?.['mismatch']">password do not match</mat-error>
    </mat-form-field>
    <button mat-raised-button color="primary" [disabled]="registerForm.invalid">Register</button>
</form>
