import { Injectable } from '@angular/core';
import { Router } from '@angular/router';
import { RouteGuards } from '../guards/routeguards';
import { HttpClient } from '@angular/common/http';
import { Observable, of } from 'rxjs';

@Injectable({
  providedIn: 'root',
})

export class UsersService {
  URL = 'http://localhost:3000/users'
  loadStates(): string[] {
    return ['KAR', 'TN', 'DL', 'MH'];
  }
  addUserToDB(data: any) {
    // localStorage.setItem('user', JSON.stringify(data));
    this.http.post(this.URL, data).subscribe((data) => {
      console.log(data);

    })
    this.route.navigateByUrl('/login');
  }
  loadUsers(): Observable<any> {
    return this.http.get(this.URL)

  }
  userLogin(login: any) {
    this.guard.isAllowed = true;
    this.route.navigateByUrl('/portfolio');
  }
  constructor(private route: Router, private guard: RouteGuards, private http: HttpClient) { }

  userLogout() {
    this.guard.isAllowed = false;
    this.route.navigateByUrl('/login');
  }
  userDelete(id: string) {
    return this.http.delete('http://localhost:3000/users/' + id)
  }

  serachUsers(term: string): Observable<any[]> {
    if (!term.trim()) {
      return of([])
    }
    return this.http.get<any[]>(`${this.URL}?uname_like=${term}`)
  }


  getUser(): Observable<any> {
    return this.http.get('https://jsonplaceholder.typicode.com/users/1')
  }
  getPosts(): Observable<any> {
    return this.http.get('https://jsonplaceholder.typicode.com/posts?userId=1')
  }
  getComments(): Observable<any> {
    return this.http.get('https://jsonplaceholder.typicode.com/comments?postId=1')
  }
}

-----------------


import { Component, OnInit } from '@angular/core';
import { UsersService } from '../../shared/services/users.service';
import { HttpClient } from '@angular/common/http';
import { forkJoin, Observable } from 'rxjs';

@Component({
  selector: 'app-portfolio',
  templateUrl: './portfolio.component.html',
  styleUrl: './portfolio.component.css'
})
export class PortfolioComponent implements OnInit {

  constructor(private service: UsersService) { }
  user: any
  posts: any[] = []
  comments: any[] = []
  ngOnInit(): void {
    forkJoin({
      user: this.service.getUser(),
      posts: this.service.getPosts(),
      comments: this.service.getComments()
    }).subscribe(({ user, posts, comments }) => {
      this.user = user
      this.posts = posts
      this.comments = comments
    })
  }

}


-----------------




<h3>User :{{user.name}}</h3>

<h2>Posts</h2>

<ul>
    <li *ngFor="let post of posts">{{post.title}}</li>
</ul>

<h2>Comments</h2>

<ul>
    <li *ngFor="let post of comments">{{post.body}}</li>
</ul>
