<div class="container">
  <div class="card">
    <div class="card-header">User Registration Form</div>
    <div class="card-body">
      <form [formGroup]="empForm" (ngSubmit)="login()">
        UserName: <input type="text" formControlName="uname" />
        <div *ngIf="empForm.get('uname')?.hasError('required')">
          <p>Username cant be blank</p>
        </div>

        Password: <input type="password" formControlName="password" />

        <div *ngIf="empForm.get('password')?.invalid">
          <div *ngIf="empForm.get('password')?.hasError('required')">
            <p>Password cant be blank</p>
          </div>
        </div>

        <button class="btn btn-primary" [disabled]="empForm.invalid">
          Register
        </button>
      </form>
    </div>
  </div>
</div>
----------------

import { Component } from '@angular/core';
import { FormBuilder, FormGroup, Validators } from '@angular/forms';
import { UsersService } from '../../shared/services/users.service';

@Component({
  selector: 'app-login',
  templateUrl: './login.component.html',
  styleUrl: './login.component.css',
})
export class LoginComponent {
  empForm: FormGroup;
  login() {
    this.service.userLogin(this.empForm.value);
  }

  states: any = [];
  constructor(private service: UsersService, private fb: FormBuilder) {
    this.empForm = this.fb.group({
      uname: ['', [Validators.required]],
      password: ['', [Validators.required]],
    });
  }
}
